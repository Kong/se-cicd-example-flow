_id: spc_191b0c04b8cd43f5b10d755f938c0444
type: ApiSpec
parentId: wrk_58044925e8cc4c99a8275a1ae1450908
modified: 1733154145137
created: 1733131178404
fileName: CI/CD example flows from Insomnia to Konnect
contents: >
  openapi: 3.0.0

  servers:
    - url: https://httpbin.apim.eu
    - url: https://httpbin.konghq.com
  info:
    contact:
      email: me@kennethreitz.org
      url: https://kennethreitz.org
      name: Kenneth Reitz
    description: |
      This service and the GutHub repo this OpenOPI is living in is about showing all the different ways of automation using the Kong tool chain.
      
      1. OpenAPI designing in Insomnia
      2. Using collections to test auto APIs
      3. Creating test collection
      4. Automating the creation of a sandbox / mockup version in Kong Gateway
      5. Propagate automatically to the Kong Gateway
      6. Publish and document on the Konnect Developer Portal

      The original httpbin service is free - but **think about giving an ice cream to the developer**

      ![Developer wants an ice cream](https://images.pexels.com/photos/5060281/pexels-photo-5060281.jpeg?cs=srgb&dl=pexels-roman-odintsov-5060281.jpg&fm=jpg&w=200) 
    title: CI/CD example flows from Insomnia to Konnect
    version: 3.8.1.0
  paths:
    /uuid:
      get:
        description: Generate and get an UUID
        operationId: get_uuid
        responses:
          "200":
            description: A UUID4.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: The UUID
                      example: 1234-5678-7878-6e6ete
        summary: Return a UUID4.
        tags:
          - Generate UUID
    /anything/query:
      get:
        description: returns all your query parameters
        operationId: query
        parameters:
          - in: query
            name: exampleParam
            required: true
            schema:
              type: integer
              minimum: 5
              maximum: 25
            description: A value between 5 and 25
        responses:
          "200":
            description: The anything endpoint but with limitation on query
        summary: Return anything data.
        tags:
          - Anything
          - Query
        x-kong-plugin-request-validator:
          enabled: true
    /anything/catOrDog:
      post:
        description: create a new pet
        operationId: create_pet
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Cat'
                  - $ref: '#/components/schemas/Dog'
        responses:
          "200":
            description: A post request only allowing a cat or dog object
        summary: To bark or not to bark
        tags:
          - Anything
          - CatOrDog
          - Body
        x-kong-plugin-rate-limiting-advanced:
          enabled: true
          config:
            limit:
              - 3
            window_size:
              - 60
            namespace: hlferuifgevhrlgzff63
    /delay/{delay}: 
      get:
        description: delay a responses by a defined number of secondes
        operationId: delay
        parameters:
          - in: path
            name: delay
            required: true
            schema:
              type: integer
              minimum: 0
              maximum: 10
            description: The delay in seconds
        responses:
          "200":
            description: Returns a delayed response
        summary: Returns a delayed response (max of 10 seconds).
        tags:
          - Delayed Response
          - Path
    /status/{codes}:
      get:
        description: returns a http status code
        operationId: status_code
        parameters:
          - in: path
            name: codes
            required: true
            schema:
              type: integer
              minimum: 200
              maximum: 599
            description: The HTTP status code (200-599)
        responses:
          "200":
            description: Success
          "300":
            description: Redirection
          "400":
            description: Client errors
          "500":
            description: Server errors
        summary: Return status code or random status code if more than one are given
        tags:
          - Status Codes
          - Path
        x-kong-plugin-key-auth:
          enabled: true
  components:
    securitySchemes:
      KeyCloak:
        type: openIdConnect
        openIdConnectUrl: https://keycloak.apim.eu/auth/realms/kong/.well-known/openid-configuration
        x-kong-security-openid-connect:
          config:
            client_id: 
              - blog_post
            client_secret: 
              - a5186adc-b5e2-4501-85a8-eb19a5e1a2a3
            ssl_verify: false
            consumer_claim:
              - email
            verify_signature: false
            redirect_uri:
               - http://localhost:8000/anything/query
            consumer_optional: true
    schemas:
      Dog:
        type: object
        properties:
          bark:
            type: boolean
          breed:
            type: string
            enum: [Dingo, Husky, Retriever, Shepherd]
  #      required:

  #        - bark

  #        - breed
      Cat:
        type: object
        properties:
          hunts:
            type: boolean
          age:
            type: integer
   #     required:
   #      - hunts
   #      - age

  tags:
    - description: Creates a random UUID and returns it in a JSON structure
      name: Generate UUID
    - name: Anything
    - name: Query
    - name: CatOrDog
    - name: Body
    - name: Delayed Response
    - name: Path
    - name: Status Codes
contentType: yaml
